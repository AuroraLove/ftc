<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.auroralove.ftctoken.mapper.UserMapper">
    <sql id="USER" >ftc_user</sql>
    <sql id="DEAL" >ftc_deal</sql>
    <sql id="PAYINFO" >ftc_user_payinfo</sql>
    <sql id="MESSAGE" >ftc_message</sql>

    <resultMap type="com.auroralove.ftctoken.model.AccountModel" id="RewardAccount">
        <result column="FTCRewardAcct" property="FTCRewardAcct"/>
    </resultMap>
    <select id="findByUserphone" resultType="com.auroralove.ftctoken.model.UserModel">
      SELECT id,phone,name,password,admin_status as amdinStatus,parent_id as parentId,regist_flag as registFlag,regist_time as registTime,teamid,
      pay_pwd,account_status as accountStatus
       FROM ftc_user
      where
      phone=#{phone}
    </select>

    <update id="updateUserDevice" parameterType="com.auroralove.ftctoken.model.UserModel">
        update ftc_user
        <set>
            user_device =#{userDevice}
        </set>
        where phone = #{phone}
    </update>

    <select id="findUserById" resultType="com.auroralove.ftctoken.model.UserModel">
        SELECT id,phone,password,teamid,admin_status as amdinStatus,pay_pwd ,account_status as accountStatus,parent_id as parentId,
         frozen_date as frozenDate,user_device as userDevice,regist_flag as registFlag FROM ftc_user
      where
      id=#{id}
    </select>
    <select id="getUsers" resultType="com.auroralove.ftctoken.model.UserModel">
        SELECT id,phone FROM ftc_user order by team_total desc
    </select>

    <update id="addTradableAmount">
        update ftc_user
        <set>
            system_amount = #{amount}
        </set>
        where id = #{id}
    </update>
    <update id="updateTeamTotal">
        update ftc_user
        <set>
            team_total = team_total+1
        </set>
        where id =#{id}
    </update>
    <insert id="newUser" parameterType="com.auroralove.ftctoken.model.UserModel">
        INSERT INTO
        <include refid="USER" />
        (
        id,
        parent_id,
        phone,
        password,
        teamid,
        regist_time
        )
        VALUES
        (
        #{id},
        #{parentId},
        #{phone},
        #{passWord},
        #{teamId},
        NOW()
        )
    </insert>

    <insert id="recharge" parameterType="com.auroralove.ftctoken.model.DealModel">
        INSERT INTO
        <include refid="DEAL" />
        (
        tid,
        uid,
        user_name,
        univalent,
        quantity,
        deal_amount,
        deal_date,
        status,
        type,
        phone
        )
        VALUES
        (
        #{tid},
        #{uid},
        #{user_name},
        #{univalent},
        #{quantity},
        #{deal_amount},
        NOW(),
        6,
        2,
        #{phone}
        )
    </insert>

    <update id="rechargeFlag">
        UPDATE <include refid="USER" />
        SET regist_flag = #{flag}
        WHERE id = #{id}
    </update>
    
     <update id="changeLoginPwd">
        UPDATE <include refid="USER" />
        SET password = #{password}
        WHERE phone = #{phone}
    </update>
    
     <update id="changePayPwd">
        UPDATE <include refid="USER" />
        SET PAY_PWD = #{payPwd}
        WHERE id = #{id}
    </update>

    <select id="getPayInfo" resultType="com.auroralove.ftctoken.model.UserPayModel">
        SELECT pid,uid,name,card_id,bank_name,ali_pay,ali_url,wechat_pay,wechat_url,bank_address,phone from ftc_user_payinfo
        WHERE uid = #{uid}
    </select>

    <update id="updatePayInfo" parameterType="com.auroralove.ftctoken.model.UserPayModel">
        update ftc_user_payinfo
        <set>
        <if test=" name!=null">
            name=#{name},
        </if>
            <if test="phone !=null">
                phone=#{phone},
            </if>
            <if test="card_id !=null">
               card_id=#{card_id},
            </if>
            <if test="bank_name !=null">
                bank_name=#{bank_name},
            </if>
            <if test="ali_pay !=null">
                ali_pay=#{ali_pay},
            </if>
            <if test=" ali_url!=null">
                ali_url=#{ali_url},
            </if>
            <if test="wechat_pay !=null">
                wechat_pay=#{wechat_pay},
            </if>
            <if test="wechat_url !=null">
                wechat_url=#{wechat_url},
            </if>
        </set>
        where uid = #{uid}
    </update>
    <update id="updateUserInfo" parameterType="com.auroralove.ftctoken.model.UserModel">
        update ftc_user
        <set>
            <if test=" pay_pwd!=null">
                pay_pwd=#{pay_pwd},
            </if>
            <if test=" passWord!=null">
                password=#{passWord},
            </if>
            <if test=" systemAmount!=null">
                system_amount=#{systemAmount},
            </if>
            <if test=" registFlag!=null">
                regist_flag=#{registFlag},
            </if>
            <if test=" teamTotal!=null">
                team_total=#{teamTotal},
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="getTradableAccountInfo" resultType="com.auroralove.ftctoken.model.DealModel">
select t1.uid,(IFNULL(t1.buy_release_amount,0)- IFNULL(t2.sell_amount,0)) as  tradeableAmount from
(select uid,IFNULL(sum(deal_amount),0) as buy_release_amount from ftc_deal  where type in(0,7) and status=6 GROUP BY uid) as t1 left   join
 (select uid,IFNULL(sum(deal_amount),0) as sell_amount from ftc_deal  where type=1 and status=6 GROUP BY uid)  as t2 ON t1.uid = t2.uid
 where t1.uid = #{uid}
    </select>

    <select id="getBuyAmount" resultType="com.auroralove.ftctoken.model.AccountModel" >
select uid,IFNULL(sum(deal_amount),0) as buyAcct from ftc_deal  where type=0 and status=6 and uid= #{uid} GROUP BY uid
    </select>
    <select id="getSellAmount" resultType="com.auroralove.ftctoken.model.AccountModel" >
select uid,IFNULL(sum(deal_amount),0) as sellAcct from ftc_deal  where type=1 and status=6 and uid= #{uid} GROUP BY uid
    </select>
    <select id="getRechargeAmount" resultType="com.auroralove.ftctoken.model.AccountModel" >
select uid,IFNULL(sum(deal_amount),0) as rechargeAcct from ftc_deal  where type=2 and status=6 and uid= #{uid} GROUP BY uid
    </select>
    <select id="getSystemAmount" resultType="com.auroralove.ftctoken.model.AccountModel" >
select id,system_amount as systemAcct from ftc_user  where id= #{uid}
    </select>

    <select id="getReleaseAmount" resultType="com.auroralove.ftctoken.model.AccountModel" >
select uid,IFNULL(sum(deal_amount),0) as releaseAmount from ftc_deal  where type=7 and status=6 and uid= #{uid} GROUP BY uid
    </select>

    <select id="getRewardAccount"  resultMap="RewardAccount" >
 select IFNULL(sum(amount),0) as FTCRewardAcct  from ftc_reward
where uid= #{id} GROUP BY uid
    </select>

    <select id="getPublicMsg" resultType="com.auroralove.ftctoken.model.PublicInfoModel">
     SELECT pid,information,date from ftc_publicinfo
    </select>

    <insert id="newPublicMsg" parameterType="java.lang.String">
       insert into ftc_publicinfo(information,date)
       VALUES (#{information},NOW())
    </insert>

    <delete id="deletePublicMsg" parameterType="java.lang.Long">
        delete from ftc_publicinfo where pid = #{pid}
    </delete>

    <insert id="newUploadMsg" >
        INSERT INTO
        <include refid="MESSAGE" />
        (id,tid,uid,phone,leaving_date,msg, pic_url,new_date)
        VALUES
        (
        #{id},
        #{tid},
        #{uid},
        #{phone},
        NOW(),
        #{message},
        #{url},
        NOW()
        )
    </insert>

    <select id="getNewMessageDate" parameterType="java.lang.Long" resultType="java.util.Date">
        select DISTINCT new_date as newMessageDate from ftc_message where tid = #{tid} AND new_date is not null
    </select>
    <insert id="uploadMsg" >
        INSERT INTO
        <include refid="MESSAGE" />
        (id,tid,uid,phone,leaving_date,msg, pic_url,new_date)
        VALUES
        (
        #{id},
        #{tid},
        #{uid},
        #{phone},
        NOW(),
        #{message},
        #{url},
        #{newDate}
        )
    </insert>
    <update id="frozenUser">
        UPDATE ftc_user
        <set>
        account_status = #{accountStatus},
        frozen_date = NOW()
        </set>
        WHERE id=#{id}
    </update>

    <update id="replayMsg">
        UPDATE
        <include refid="MESSAGE"/>
        set
        replay_date = NOW(),
        r_msg = #{message},
        replay_flag = 1
        WHERE id=#{mesId}
    </update>

    <select id="getTeamAmount" resultType="com.auroralove.ftctoken.model.TeamAmount">
        select
        (select sum(deal_amount) from ftc_deal where type=2 and status=6 and uid in
        <foreach collection="ids" item="id" index="index" separator="," open="(" close=")">
            #{ids[${index}],jdbcType=BIGINT}
        </foreach>) as teamRechargeAmount,
        (select sum(amount) from ftc_reward where uid in
        <foreach collection="ids" item="id" index="index" separator="," open="(" close=")">
            #{ids[${index}],jdbcType=BIGINT}
        </foreach> ) as teamRewardAmount
    </select>

    <select id="messageInfo" resultType="com.auroralove.ftctoken.model.MessageModel" >
        SELECT id,tid,uid,IFNULL(msg,'') as leavingMsg,IFNULL(r_msg,'') as replayMsg,leaving_date as leavingDate,
        replay_date as replayDate,replay_flag as replayFlag,phone,pic_url as leavingPictureUrl FROM ftc_message
      where
      uid=#{uid} and  DATE_ADD(leaving_date,INTERVAL 30 DAY) <![CDATA[>= ]]> NOW() order by leaving_date,replay_date
    </select>

    <select id="getMessages" resultType="com.auroralove.ftctoken.model.MessageModel">
       SELECT id,tid,uid,IFNULL(msg,'') as leavingMsg,IFNULL(r_msg,'') as replayMsg,max(leaving_date) as leavingDate,
        replay_date as replayDate,replay_flag as replayFlag,phone,pic_url as leavingPictureUrl  FROM ftc_message
         where replay_flag=0 GROUP BY uid
    </select>

    <select id="getUserChilds" resultType="com.auroralove.ftctoken.model.UserModel">
        SELECT id,phone,name,regist_flag
         FROM ftc_user
      where
      parent_id=#{uid}
    </select>

    <insert id="savePayInfo">
        INSERT INTO ftc_user_payinfo
        (pid,uid,name,phone,card_id,bank_name,ali_pay,ali_url,wechat_pay,
        wechat_url)
        VALUES
        (
        #{pid},
        #{uid},
        #{name},
        #{phone},
        #{card_id},
        #{bank_name},
        #{ali_pay},
        #{ali_url},
        #{wechat_pay},
        #{wechat_url}
        )
    </insert>

    <update id="updatePayPwd">
        update ftc_user
        <set>
        pay_pwd = #{payPwd}
        </set>
        where id = #{id}
    </update>

    <select id="getVeritifyInfo" resultType="com.auroralove.ftctoken.model.VeritifyModel">
        SELECT vid,phone,code,new_time as newDate,loss_time as lossDate
         FROM ftc_veritify
      where
      phone=#{phone}
    </select>

    <update id="updateVeritifyInfo">
        update ftc_veritify
        <set>
            code = #{code},
            new_time = NOW(),
            loss_time = ADDDATE(NOW(),interval 60 second)
        </set>
        where phone = #{phone}
    </update>

    <insert id="newVeritifyInfo" >
        insert into ftc_veritify (phone,code,new_time,loss_time)
        values (#{phone},#{code},NOW(),ADDDATE(NOW(),interval 60 second))
    </insert>
    <resultMap id="messageInfoList" type="com.auroralove.ftctoken.model.MessageModelList">
        <result property="tid" column="tid"/>
        <collection property="messageModels" ofType="com.auroralove.ftctoken.model.MessageModel">
            <result property="id" column="id"/>
            <result property="uid" column="uid"/>
            <result property="leavingMsg" column="leavingMsg"/>
            <result property="replayMsg" column="replayMsg"/>
            <result property="leavingDate" column="leavingDate"/>
            <result property="replayDate" column="replayDate"/>
            <result property="phone" column="phone"/>
            <result property="leavingPictureUrl" column="leavingPictureUrl"/>
        </collection>
    </resultMap>

</mapper>